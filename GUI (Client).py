# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'tesss.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

# Client
# import library
import xmlrpc.client
import os
import datetime
import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtGui import QIcon

s = xmlrpc.client.ServerProxy('http://127.0.0.1:8008', allow_none=True) # local IP

# mengambil data medis dari server
dataMedis = s.getDataMedis()

# class untuk GUI
class Ui_Dialog(object):

    # fungsi GUI untuk setup ui
    def setupUi(self, Dialog):
        # frame utama
        Dialog.setObjectName("Dialog")
        Dialog.resize(670, 480)
        Dialog.setWindowIcon(QIcon('logo.png'))
        Dialog.setStyleSheet("Background-color: #1ca369;")

        self.tabWidget = QtWidgets.QTabWidget(Dialog)
        self.tabWidget.setGeometry(QtCore.QRect(10, 10, 650, 431))
        self.tabWidget.setToolTip("")
        self.tabWidget.setStatusTip("")
        self.tabWidget.setWhatsThis("")
        self.tabWidget.setAccessibleName("")
        self.tabWidget.setAccessibleDescription("")
        self.tabWidget.setObjectName("tabWidget")
        self.tabWidget.setStyleSheet("Background-color: #d1f8c0;")


        # tab daftar -------------------------------------------------
        self.tabDaftar = QtWidgets.QWidget()
        self.tabDaftar.setEnabled(True)
        self.tabDaftar.setObjectName("tabDaftar")
        self.btnDaftar = QtWidgets.QPushButton(self.tabDaftar)
        self.btnDaftar.setGeometry(QtCore.QRect(290, 230, 121, 31))
        self.btnDaftar.setObjectName("btnDaftar")
        self.btnDaftar.setStyleSheet("Background-color: #e6fddb;")

        self.labelKlinik = QtWidgets.QLabel(self.tabDaftar)
        self.labelKlinik.setGeometry(QtCore.QRect(20, 50, 251, 21))

        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)

        self.labelKlinik.setFont(font)
        self.labelKlinik.setObjectName("labelKlinik")
        self.inputNoRek = QtWidgets.QLineEdit(self.tabDaftar)
        self.inputNoRek.setGeometry(QtCore.QRect(290, 100, 191, 22))
        self.inputNoRek.setObjectName("inputNoRek")
        self.labelNoRek = QtWidgets.QLabel(self.tabDaftar)
        self.labelNoRek.setGeometry(QtCore.QRect(20, 100, 251, 21))

        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)

        self.labelNoRek.setFont(font)
        self.labelNoRek.setObjectName("labelNoRek")
        self.labelNama = QtWidgets.QLabel(self.tabDaftar)
        self.labelNama.setGeometry(QtCore.QRect(20, 140, 241, 21))

        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)

        self.labelNama.setFont(font)
        self.labelNama.setObjectName("labelNama")
        self.labelTglLahir = QtWidgets.QLabel(self.tabDaftar)
        self.labelTglLahir.setGeometry(QtCore.QRect(20, 180, 241, 21))

        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)

        self.labelTglLahir.setFont(font)
        self.labelTglLahir.setObjectName("labelTglLahir")
        self.inputNama = QtWidgets.QLineEdit(self.tabDaftar)
        self.inputNama.setGeometry(QtCore.QRect(290, 140, 191, 22))
        self.inputNama.setObjectName("inputNama")
        self.inputTglLahir = QtWidgets.QLineEdit(self.tabDaftar)
        self.inputTglLahir.setGeometry(QtCore.QRect(290, 180, 191, 22))
        self.inputTglLahir.setObjectName("inputTglLahir")
        self.inputKlinik = QtWidgets.QComboBox(self.tabDaftar)
        self.inputKlinik.setGeometry(QtCore.QRect(290, 50, 191, 22))
        self.inputKlinik.setObjectName("inputKlinik")

        # menambahkan item kosong untuk combo box pilih klinik
        for i in range(0, len(s.getKlinik())):
            self.inputKlinik.addItem("")
        self.tabWidget.addTab(self.tabDaftar, "Daftar Antrean")


        # tab jam kerja ------------------------------------------
        self.tabJamKerja = QtWidgets.QWidget()
        self.tabJamKerja.setObjectName("tabJamKerja")
        self.tableJamKerja = QtWidgets.QTableWidget(self.tabJamKerja)
        self.tableJamKerja.setGeometry(QtCore.QRect(10, 10, 501, 381))
        self.tableJamKerja.setObjectName("tableJamKerja")
        self.tableJamKerja.setColumnCount(2)
        self.tableJamKerja.setRowCount(len(s.getKlinik()))

        item = QtWidgets.QTableWidgetItem()
        self.tableJamKerja.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableJamKerja.setHorizontalHeaderItem(1, item)
        
        # menambahkan item kosong untuk tabel lihat jam kerja 
        for i in range(0, len(s.getKlinik())):
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.tableJamKerja.setItem(i, 0, item)
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.tableJamKerja.setItem(i, 1, item)
        
        self.tabWidget.addTab(self.tabJamKerja, "")
        self.tabLihatData = QtWidgets.QWidget()

        # tab lihat data medis ---------------------------------------
        self.tabLihatData.setObjectName("tabLihatData")
        self.tableDataMedis = QtWidgets.QTableWidget(self.tabLihatData)
        self.tableDataMedis.setGeometry(QtCore.QRect(10, 10, 501, 381))
        self.tableDataMedis.setObjectName("tableDataMedis")
        self.tableDataMedis.setColumnCount(4)

        item = QtWidgets.QTableWidgetItem()
        self.tableDataMedis.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableDataMedis.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableDataMedis.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableDataMedis.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableDataMedis.setHorizontalHeaderItem(3, item)

        self.tabWidget.addTab(self.tabLihatData, "Lihat Data Medis")

        # tab cari data antrian --------------------------------------
        self.tabCari = QtWidgets.QWidget()
        self.tabCari.setObjectName("tabCari")
        self.tableHasilCari = QtWidgets.QTableWidget(self.tabCari)
        self.tableHasilCari.setGeometry(QtCore.QRect(-5, 151, 650, 141))
        self.tableHasilCari.setObjectName("tableHasilCari")
        self.tableHasilCari.setColumnCount(6)
        self.tableHasilCari.setRowCount(1)

        item = QtWidgets.QTableWidgetItem()
        self.tableHasilCari.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableHasilCari.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableHasilCari.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableHasilCari.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableHasilCari.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableHasilCari.setHorizontalHeaderItem(4, item)
        self.tableHasilCari.setColumnWidth(4, 50)
        item = QtWidgets.QTableWidgetItem()
        self.tableHasilCari.setHorizontalHeaderItem(5, item)
        self.tableHasilCari.setColumnWidth(5, 150)

        self.labelCarKlinik = QtWidgets.QLabel(self.tabCari)
        self.labelCarKlinik.setGeometry(QtCore.QRect(40, 30, 141, 21))

        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)

        self.labelCarKlinik.setFont(font)
        self.labelCarKlinik.setObjectName("labelCarKlinik")
        self.labelCariNama = QtWidgets.QLabel(self.tabCari)
        self.labelCariNama.setGeometry(QtCore.QRect(40, 70, 141, 21))

        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)

        self.labelCariNama.setFont(font)
        self.labelCariNama.setObjectName("labelCariNama")
        self.inputCariKlinik = QtWidgets.QLineEdit(self.tabCari)
        self.inputCariKlinik.setGeometry(QtCore.QRect(200, 30, 181, 20))
        self.inputCariKlinik.setObjectName("inputCariKlinik")
        self.inputCariNama = QtWidgets.QLineEdit(self.tabCari)
        self.inputCariNama.setGeometry(QtCore.QRect(200, 70, 181, 20))
        self.inputCariNama.setObjectName("inputCariNama")
        self.btnCari = QtWidgets.QPushButton(self.tabCari)
        self.btnCari.setGeometry(QtCore.QRect(200, 105, 121, 31))
        self.btnCari.setObjectName("btnCari")
        self.btnCari.setStyleSheet("Background-color: #e6fddb;")
        self.tabWidget.addTab(self.tabCari, "")

        # menyambungkan button ke fungsi
        self.btnDaftar.clicked.connect(self.addPasien)
        self.btnCari.clicked.connect(self.cari)

        # set warna input
        self.inputCariKlinik.setStyleSheet("Background-color: white;")
        self.inputCariNama.setStyleSheet("Background-color: white;")
        self.inputKlinik.setStyleSheet("Background-color: white;")
        self.inputNama.setStyleSheet("Background-color: white;")
        self.inputNoRek.setStyleSheet("Background-color: white;")
        self.inputTglLahir.setStyleSheet("Background-color: white;")

        self.retranslateUi(Dialog)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    # fungsi untuk menambahkan data pasien    
    def addPasien(self):
        # inputan user pasien
        klinikPasien = str(self.inputKlinik.currentText())
        noRekam = self.inputNoRek.text()
        namaPasien = self.inputNama.text()
        tanggalLahir = str(self.inputTglLahir.text())

        # disimpan dalam variabel hasil dengan memanggil fungsi registrasi
        # dari server
        hasil = s.registrasi(noRekam,namaPasien,tanggalLahir,klinikPasien)

        # buat tabel data medis
        self.tableDataMedis.setRowCount(1)
        
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableDataMedis.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableDataMedis.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableDataMedis.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableDataMedis.setItem(0, 3, item)

        _translate = QtCore.QCoreApplication.translate
    
        item = self.tableDataMedis.item(0, 0)
        item.setText(_translate("Dialog", str(hasil))) #No Antrean
        item = self.tableDataMedis.item(0, 1)
        item.setText(_translate("Dialog", noRekam))
        item = self.tableDataMedis.item(0, 2)
        item.setText(_translate("Dialog", namaPasien))
        item = self.tableDataMedis.item(0, 3)
        item.setText(_translate("Dialog", klinikPasien))

        # jika inputan berhasil ditambahkan
        # menambilkan pesan
        msg = QMessageBox()
        msg.setText("Data Pasien Telah Ditambahkan dengan Nomor Antrian {}".format(str(hasil)))
        msg.setWindowTitle("Information")
        msg.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
        retval = msg.exec_()
        print("Data pasien telah ditambahkan")
    
    # fungsi mencari data pasien
    def cari(self):
        # memanggil fungsi get data medis pada server
        dataMedis = s.getDataMedis()
        # variabel ketemu untuk pencarian data
        ketemu = 0

        _translate = QtCore.QCoreApplication.translate

        # inputan data pasien
        cariKlinik = str(self.inputCariKlinik.text())
        cariNama = str(self.inputCariNama.text())

        # buat tabel kosong
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableHasilCari.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableHasilCari.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableHasilCari.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableHasilCari.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableHasilCari.setItem(0, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableHasilCari.setItem(0, 5, item)

        #mencari data pasien yang dicari oleh user
        for i in range(len(dataMedis)):
            
            # print("Pasien",i+1)
            # print(dataMedis[i][1])
            # print(dataMedis[i][4])
            # print(dataMedis[i][5])

            # pengecekan apakah data sama dengan yang dicari
            # jika inputan nama dan klinik ada di list data medis
            # data akan dimasukkan ke tabel
            if cariNama == dataMedis[i][1] and cariKlinik == dataMedis[i][3]:
                item = self.tableHasilCari.item(0, 0)
                item.setText(_translate("Dialog", dataMedis[i][0]))
                item = self.tableHasilCari.item(0, 1)
                item.setText(_translate("Dialog", dataMedis[i][1]))
                item = self.tableHasilCari.item(0, 2)
                item.setText(_translate("Dialog", dataMedis[i][2]))
                item = self.tableHasilCari.item(0, 3)
                item.setText(_translate("Dialog", dataMedis[i][3]))
                item = self.tableHasilCari.item(0, 4)
                item.setText(_translate("Dialog", str(dataMedis[i][5])))
                item = self.tableHasilCari.item(0, 5)
                item.setText(_translate("Dialog", str(dataMedis[i][4])))

                # jika sudah berhasil ketemu akan memunculkan pesan
                msg = QMessageBox()
                msg.setText("Data Pasien yang Dicari Telah Ditemukan Dengan nomor Antrian {}".format(str(i+1)))
                msg.setWindowTitle("Information")
                msg.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
                retval = msg.exec_()
                ketemu = 1
                break
        
        # jika data yang dicari tidak ketemu        
        if ketemu == 0:
            # memunculkan pesan
            msg = QMessageBox()
            msg.setText("Data Pasien Tidak Ditemukan")
            msg.setWindowTitle("Information")
            msg.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg.exec_()

    #---------------------------------------------------------------------------
    # fungsi untuk mengisi widget pada GUI yang bersifat static
    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "NgantriKuy"))
        self.btnDaftar.setText(_translate("Dialog", "Daftar"))
        self.labelKlinik.setText(_translate("Dialog", "Pilih Klinik"))
        self.labelNoRek.setText(_translate("Dialog", "Nomor Rekam Medis"))
        self.labelNama.setText(_translate("Dialog", "Nama"))
        self.labelTglLahir.setText(_translate("Dialog", "Tanggal Lahir"))
        
        os.system("CLS")
        # variabel waktu sekarang
        e = datetime.datetime.now()

        # variabel dengan memanggil fungsi pada server
        listKlinik = s.getKlinik()
        listJamKlinik = s.getJamKlinik()

        # perkondisian jadwal buka dan tutup klinik untuk combobox input klinik
        j = 0
        for i in listJamKlinik:
            if(e > listJamKlinik[i]):
                self.inputKlinik.setItemText(j, _translate("Dialog", "{} (Closed)".format(i)))
                j = j + 1
            else:
                self.inputKlinik.setItemText(j, _translate("Dialog", i))
                j = j + 1
            

        # tab jam kerja ------------------------------------------------------
        item = self.tableJamKerja.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "Nama Klinik"))
        item = self.tableJamKerja.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "Jadwal Tutup"))

        __sortingEnabled = self.tableJamKerja.isSortingEnabled()
        self.tableJamKerja.setSortingEnabled(False)

        #menampilkan list klinik dengan jam kerjanya
        j = 0
        for k in listKlinik:
            item = self.tableJamKerja.item(j, 0)
            item.setText(_translate("Dialog", listKlinik[k]))
            j=j+1
        
        j = 0
        for l in listJamKlinik:
            jam = str(listJamKlinik[l])
            item = self.tableJamKerja.item(j, 1)
            item.setText(_translate("Dialog", jam[9:]))
            j=j+1
        
        
        self.tableJamKerja.setSortingEnabled(__sortingEnabled)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabJamKerja), _translate("Dialog", "Jam Kerja Klinik"))


        # tab lihat data medis ------------------------------------------------
        
        item = self.tableDataMedis.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "Nomor Antrean"))
        item = self.tableDataMedis.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "Nomor Rekam"))
        item = self.tableDataMedis.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "Nama"))
        item = self.tableDataMedis.horizontalHeaderItem(3)
        item.setText(_translate("Dialog", "Klinik"))

        __sortingEnabled = self.tableDataMedis.isSortingEnabled()
        self.tableDataMedis.setSortingEnabled(False)
        self.tableDataMedis.setSortingEnabled(__sortingEnabled)

        # tab cari antrian ----------------------------------------------------
        item = self.tableHasilCari.verticalHeaderItem(0)
        item.setText(_translate("Dialog", " "))
        item = self.tableHasilCari.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "Nomor Rekam"))
        item = self.tableHasilCari.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "Nama"))
        item = self.tableHasilCari.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "Tanggal Lahir"))
        item = self.tableHasilCari.horizontalHeaderItem(3)
        item.setText(_translate("Dialog", "Klinik"))
        item = self.tableHasilCari.horizontalHeaderItem(4)
        item.setText(_translate("Dialog", "Urutan"))
        item = self.tableHasilCari.horizontalHeaderItem(5)
        item.setText(_translate("Dialog", "Perkiraan Waktu Masuk"))

        __sortingEnabled = self.tableHasilCari.isSortingEnabled()
        self.tableHasilCari.setSortingEnabled(False)
  
        self.tableHasilCari.setSortingEnabled(__sortingEnabled)
        self.labelCarKlinik.setText(_translate("Dialog", "Nama Klinik"))
        self.labelCariNama.setText(_translate("Dialog", "Nama Pasien"))
        self.btnCari.setText(_translate("Dialog", "Cari"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabCari), _translate("Dialog", "Cari Antrean"))

# main program
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
